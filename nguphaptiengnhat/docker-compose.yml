version: "3.7"
services:
  front_end:
    build:
      context: .
      dockerfile: ./front_end/docker/Dockerfile
    volumes:
      - ./front_end/src:/front_end/src
      - ./front_end/public:/front_end/public
    restart: always
    ports:
      - ${CLIENT_PUBLIC_PORT}:4000
    depends_on:
      - back_end
    networks:
      - network

  back_end:
    build:
      context: .
      dockerfile: ./back_end/docker/Dockerfile
    volumes:
      - ./back_end/src:/back_end/src
    restart: always
    ports:
      - ${SERVER_PUBLIC_PORT}:3000
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    networks:
      - network

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_PUBLIC_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PUBLIC_PASSWORD}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "${POSTGRES_PUBLIC_PORT}:5432"
    networks:
      - network
    restart: unless-stopped

  redis:
    image: redis
    restart: always
    ports:
      - "${REDIS_PUBLIC_PORT}:6379"
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
    postgres:
